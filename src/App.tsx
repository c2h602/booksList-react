// import { useState } from "react";
// import { books } from "./books";
import "./App.css";
import BooksList from "./components/BooksList";
import Button from "./components/Button";
import Modal from "./components/Modal";

import { useSelector, useDispatch } from "react-redux";
import {
  filterBooks,
  disableFilter,
  openDescriptionBook,
  closeDescriptionBook,
} from "./store/booksSlice";


export default function App() {
  // –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
  // –ó–¥–µ—Å—å state ‚Äî —ç—Ç–æ –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const { filteredBooks, selectedBook, showModal } = useSelector((state) => state.books);

  // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ—Ç–æ–¥ store.dispatch() —Ç–µ–∫—É—â–µ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
  const dispatch = useDispatch();

  // const [filteredBooks, setFilteredBooks] = useState(books);
  // const [showModal, setShowModal] = useState<boolean>(false);
  // const [selectedBook, setSelectedBook] = useState<IBook>();

  // function handleFilter(genre: string) {
  //   const filtered = books.filter((book) => book.genre === genre);
  //   setFilteredBooks(filtered);
  // }

  // function handleDisableFilter() {
  //   setFilteredBooks(books);
  // }

  // function handleOpenDescriptionBook(book: IBook) {
  //   setSelectedBook(book);
  //   setShowModal(true);
  // }

  // function handleCloseModal() {
  //   setShowModal(false);
  // }

  return (
    <>
      <h1>Books List üìö</h1>

      <Button onClick={() => dispatch(filterBooks("—Ñ—ç–Ω—Ç–µ–∑–∏"))}>
        –§—ç–Ω—Ç–µ–∑–∏</Button>
      <Button onClick={() => dispatch(filterBooks("—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞"))}>
        –§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞
      </Button>
      <Button onClick={() => dispatch(filterBooks("–≤–∏–¥–µ–æ–∏–≥—Ä—ã"))}>
        –í–∏–¥–µ–æ–∏–≥—Ä—ã
      </Button>
      <Button onClick={() => dispatch(filterBooks("–±–∏–æ–≥—Ä–∞—Ñ–∏—è"))}>
        –ë–∏–æ–≥—Ä–∞—Ñ–∏—è
      </Button>
      <Button onClick={() => dispatch(disableFilter())}>
        –í—Å–µ –∂–∞–Ω—Ä—ã
      </Button>

      <BooksList books={filteredBooks} onClick={(book) => dispatch(openDescriptionBook(book))} />
      {showModal && selectedBook && (
        <Modal onClick={() => dispatch(closeDescriptionBook())} book={selectedBook}></Modal>
      )}
    </>
  );
}
